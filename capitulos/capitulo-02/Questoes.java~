import java.util.Scanner;

public class Questoes{

	public static void main(String[] args){
	
		/*
		2.18		
		(Exibindo formas com asteriscos) Escreva um aplicativo que exiba uma 
		caixa, uma elipse, uma seta e um losango utilizando asteriscos
		(*), como segue:
		
		String[][] formas = {
			{"*", "*", "*", "*", "*", "*", "*", "*", "*", " ", " "," ","*","*","*"," ", " ", " ", " ", " ", "*", " ", " ", " ", " "," "," "," ","*"," "," "," "," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", "*", "*", "*", " ", " ", " "," "," ","*"," ","*"," "," "," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", "*", "*", "*", "*", "*", " ", " "," ","*"," "," "," ","*"," "," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", " ", "*", " ", " ", " ", " ","*"," "," "," "," "," ","*"," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", " ", "*", " ", " ", " ", "*"," "," "," "," "," "," "," ","*"},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", " ", "*", " ", " ", " ", " ","*"," "," "," "," "," ","*"," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", " ", "*", " ", " ", " ", " "," ","*"," "," "," ","*"," "," "},
			{"*", " ", " ", " ", " ", " ", " ", " ", "*", " ", "*"," "," "," "," "," ", "*", " ", " ", " ", "*", " ", " ", " ", " "," "," ","*"," ","*"," "," "," "},
			{"*", "*", "*", "*", "*", "*", "*", "*", "*", " ", " "," ","*","*","*"," ", " ", " ", " ", " ", "*", " ", " ", " ", " "," "," "," ","*"," "," "," "," "}
		};
		
		for( int row = 0; row < formas.length; row++ ){
			for( int col = 0; col < formas[row].length; col++ ){
				System.out.print(formas[row][col]);	
			}
			System.out.println();	
		}
		
		System.out.println();
		System.out.println();
		//2.19 O que o seguinte código imprime?		
		System.out.printf("*%n**%n***%n****%n*****%n");
		
		System.out.println();
		System.out.println();
		
		//2.20 O que o seguinte código imprime?
		System.out.println("*");
		System.out.println("***");
		System.out.println("*****");
		System.out.println("****");
		System.out.println("**");
		
		System.out.println();
		System.out.println();
		
		//2.21 O que o seguinte código imprime?
		System.out.print("*");
		System.out.print("***");
		System.out.print("*****");
		System.out.print("****");
		System.out.println("**");
		
		System.out.println();
		System.out.println();
		
		//2.22 O que o seguinte código imprime?
		System.out.print("*");
		System.out.println("***");
		System.out.println("*****");
		System.out.print("****");
		System.out.println("**");
		
		System.out.println();
		System.out.println();
		
		//2.23 O que o seguinte código imprime?
		System.out.printf("%s%n%s%n%s%n", "*", "***", "*****");
		
	    System.out.println();
		System.out.println();
		
		//2.24 (Inteiros maiores e menores) Escreva um aplicativo que leia cinco 
		//inteiros, além de determinar e imprimir o maior e o menor inteiro
		//no grupo. Utilize somente as técnicas de programação que você aprendeu 
		//neste capítulo.
		
		Scanner input = new Scanner(System.in);
		int n1;
		int n2;
		int n3;
		int n4;
		int n5;
		
		
		System.out.print( "Digite o primeiro inteiro: " );
		n1 = input.nextInt();
		System.out.print( "Digite o segundo inteiro: " );
		n2 = input.nextInt();
		System.out.print( "Digite o terceiro inteiro: " );
		n3 = input.nextInt();
		System.out.print( "Digite o quarto inteiro: " );
		n4 = input.nextInt();
		System.out.print( "Digite o quinto inteiro: " );
		n5 = input.nextInt();
		
		int maior = n1;
		int menor = n1;
		
		if( n2 > maior ) maior = n2;
		if( n3 > maior ) maior = n3;
		if( n4 > maior ) maior = n4;
		if( n5 > maior ) maior = n5;
		
	    if( n2 < menor ) menor = n2;
		if( n3 < menor ) menor = n3;
		if( n4 < menor ) menor = n4;
		if( n5 < menor ) menor = n5;
		
		System.out.printf("%s: %d%n", "O maior número inteiro é", maior);
		System.out.printf("%s: %d%n", "O menor número inteiro é", menor);
		
		System.out.println();
		System.out.println();
		
		//2.25 (Ímpar ou par) Escreva um aplicativo que leia um inteiro, além de 
		//determinar e imprimir se ele é ímpar ou par. [Dica: utilize o operador
		//de resto. Um número par é um múltiplo de 2. Qualquer múltiplo de 2 deixa um 
		//resto 0 quando dividido por 2.]
		
		System.out.print("Digite um número inteiro: ");
		Scanner input = new Scanner(System.in);
		int number = input.nextInt();
		
		if( number % 2 == 0){
			System.out.printf("%s %d é par", "O número", number);
		}
		else{
			System.out.printf("%s %d é ímpar", "O número", number);	
		}
		*/
		
		
		//2.26 (Múltiplos) Escreva um aplicativo que leia dois inteiros, além de
		//determinar se o primeiro é um múltiplo do segundo e imprimir o resultado.
		//[Dica: utilize o operador de resto.]
		
		/*
		Scanner input = new Scanner(System.in);
		System.out.print("Digite o primeiro número inteiro ");
		int number1 = input.nextInt();
		System.out.print("Digite o segundo número inteiro ");
		int number2 = input.nextInt();
		
		if( number1 % number2 == 0 ){
			System.out.printf("%n%s %d %s %d", "O número", number1, "é múltiplo de", number2);
		} 
		else{
			System.out.printf("%n%s %d %s %d", "O número", number1, "não é múltiplo de", number2);
		}		
		
		
		//2.27 (Padrão de tabuleiro de damas de asteriscos) Escreva um 
		//aplicativo que exiba um padrão de tabuleiro de damas, como mostrado 
		//a seguir:
		
		for( int linha = 0; linha < 8; linha++ ){			
			if( linha % 2 != 0 )
				System.out.print("  ");
			
			for( int coluna = 0; coluna < 8; coluna++ ){
				System.out.print(" * ");
			}
			
			System.out.println();
			System.out.println();
		}
		
		
		//2.28 (Diâmetro, circunferência e área de um círculo) Eis uma prévia do 
		//que veremos mais adiante. Neste capítulo, você aprendeu sobre
		//inteiros e o tipo int. O Java também pode representar números de pontos 
		//flutuantes que contêm pontos de fração decimal, como 3,14159.
		//Escreva um aplicativo que leia a entrada a partir do usuário do raio de um 
		//círculo como um inteiro e imprima o diâmetro do círculo,
		//circunferência e área utilizando o valor do ponto flutuante 3,14159 para PI. 
		//Utilize as técnicas mostradas na Figura 2.7. [Observação: você
		//também pode empregar a constante Math.PI predefinida para o valor de PI. 
		//Essa constante é mais precisa que o valor 3,14159. A classe
		//Math é definida no pacote java.lang. As classes nesse pacote são importadas 
		//automaticamente, portanto, você não precisa importar
		//a classe Math para utilizá-la.] Adote as seguintes fórmulas (r é o raio):
		
		System.out.print("Digite o raio do círculo: ");
		Scanner input = new Scanner(System.in);
		int raio = input.nextInt();
		
		System.out.printf("Diâmetro do circulo é %d%n", 2 * raio);
		System.out.printf("circunferência do circulo é %f%n", 2 * Math.PI * raio);
		System.out.printf("área do circulo é %f%n", Math.PI * raio * raio);

		
		//2.29 (O valor inteiro de um caractere) Eis outra prévia do que 
		//virá adiante. Neste capítulo, você aprendeu 
		//sobre inteiros e o tipo int. O
		//Java também pode representar letras maiúsculas, minúsculas e 
		//uma variedade considerável de símbolos especiais. Cada caractere tem
		//uma representação correspondente de inteiro. O conjunto de 
		//caracteres que um computador utiliza com as respectivas representações na
		//forma de inteiro desses caracteres é chamado de conjunto de 
		//caracteres desse computador. Você pode indicar um valor de caractere em um
		//programa simplesmente incluindo esse caractere entre aspas simples, como em ‘A'.
		
		char[] caracteres = { 'A', 'B', 'C', 'a', 'b', 'c', '0', '1', '2', '$', '*', '+', '/', ' '};
		for( int i = 0; i < caracteres.length; i++ ){
			System.out.printf( "O caractere %c tem como valor inteiro %d%n", caracteres[i], (int)caracteres[i] );
		}
		
		*/
		
		System.out.print("Digite cinco dígitos: ");
		Scanner input = new Scanner(System.in);
		String text   = input.nextLine();
				
		for( char c : text.toCharArray()){
			System.out.print( c + " " );	
		}
		
	}
}